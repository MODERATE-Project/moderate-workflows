version: "3"

vars:
  MINIKUBE_MEM: 8G
  MINIKUBE_CPU: 2
  DAGSTER_CHART_VERSION: 1.4.14
  DAGSTER_WEBSERVER_PORT: 8181
  OPEN_METADATA_CHART_VERSION: 1.1.12
  IMAGE_LOCAL_NAME: moderate-dagster
  IMAGE_REMOTE_NAME: agmangas/moderate-dagster
  IMAGE_REMOTE_TAG: latest
  VENV_NAME: .venv
  SECRETS_ENV_FILE: dagster-secrets.env
  SECRETS_NAME: dagster-secrets
  VALUES_DAGSTER_TMPL: values-dagster.yaml.template
  VALUES_DAGSTER: values-dagster.yaml
  VALUES_OPEN_METADATA_TMPL: values-openmetadata.yaml.template
  VALUES_OPEN_METADATA: values-openmetadata.yaml
  OPEN_METADATA_PRIVKEY: om_privkey.der
  OPEN_METADATA_PUBKEY: om_pubkey.der
  OPEN_METADATA_PEM_PRIVKEY: om_privkey.pem

env:
  IMAGE_REMOTE_NAME: "{{.IMAGE_REMOTE_NAME}}"
  IMAGE_REMOTE_TAG: "{{.IMAGE_REMOTE_TAG}}"

dotenv: [.env, .env.default]

tasks:
  clean:
    desc: Clean up the dev environment
    cmds:
      - minikube delete
      - docker compose -f {{.ROOT_DIR}}/docker-compose.dev.yml down
      - cmd: rm {{.ROOT_DIR}}/{{.VALUES_DAGSTER}}
        ignore_error: true
      - cmd: rm {{.ROOT_DIR}}/{{.VALUES_OPEN_METADATA}}
        ignore_error: true
      - cmd: rm {{.ROOT_DIR}}/{{.SECRETS_ENV_FILE}}
        ignore_error: true
      - cmd: rm {{.ROOT_DIR}}/{{.OPEN_METADATA_PRIVKEY}}
        ignore_error: true
      - cmd: rm {{.ROOT_DIR}}/{{.OPEN_METADATA_PUBKEY}}
        ignore_error: true
      - cmd: rm {{.ROOT_DIR}}/{{.OPEN_METADATA_PEM_PRIVKEY}}
        ignore_error: true

  compose-up:
    desc: Start the Compose stack
    cmds:
      - docker compose -f {{.ROOT_DIR}}/docker-compose.dev.yml up -d --build --wait

  minikube-start:
    desc: Start minikube
    cmds:
      - minikube start --memory={{.MINIKUBE_MEM}} --cpus={{.MINIKUBE_CPU}}
    status:
      - minikube status

  gen-open-metadata-keypair:
    desc: Generate the Open Metadata keypair
    cmds:
      - openssl genrsa -out {{.ROOT_DIR}}/{{.OPEN_METADATA_PEM_PRIVKEY}} 2048
      - >
        openssl pkcs8 -topk8 -inform PEM -outform DER
        -in {{.ROOT_DIR}}/{{.OPEN_METADATA_PEM_PRIVKEY}}
        -out {{.ROOT_DIR}}/{{.OPEN_METADATA_PRIVKEY}} -nocrypt
      - >
        openssl rsa
        -in {{.ROOT_DIR}}/{{.OPEN_METADATA_PEM_PRIVKEY}}
        -pubout -outform DER
        -out {{.ROOT_DIR}}/{{.OPEN_METADATA_PUBKEY}}
    status:
      - test -f {{.ROOT_DIR}}/{{.OPEN_METADATA_PRIVKEY}}

  build-dagster-secrets-envfile:
    desc: Build the Dagster secrets envfile
    vars:
      SECRETS_PATH: "{{.ROOT_DIR}}/{{.SECRETS_ENV_FILE}}"
    cmds:
      - cmd: rm {{.ROOT_DIR}}/{{.SECRETS_ENV_FILE}}
        ignore_error: true
      - echo "KEYCLOAK_SERVER_URL=http://host.docker.internal:8080/" >> {{.SECRETS_PATH}}
      - echo "KEYCLOAK_ADMIN_USERNAME={{.KEYCLOAK_ADMIN}}" >> {{.SECRETS_PATH}}
      - echo "KEYCLOAK_ADMIN_PASSWORD={{.KEYCLOAK_ADMIN_PASSWORD}}" >> {{.SECRETS_PATH}}
      - echo "POSTGRES_HOST=host.docker.internal" >> {{.SECRETS_PATH}}
      - echo "POSTGRES_PORT=5432" >> {{.SECRETS_PATH}}
      - echo "POSTGRES_USERNAME={{.POSTGRES_USER}}" >> {{.SECRETS_PATH}}
      - echo "OPEN_METADATA_HOST=host.docker.internal" >> {{.SECRETS_PATH}}
      - echo "OPEN_METADATA_PORT=8585" >> {{.SECRETS_PATH}}
      # ToDo: Retrieve the token programmatically
      - echo "OPEN_METADATA_TOKEN={{.OPEN_METADATA_TOKEN}}" >> {{.SECRETS_PATH}}

  create-dagster-secrets:
    desc: Create the Dagster Kubernetes secrets
    deps:
      - build-dagster-secrets-envfile
    cmds:
      - kubectl create secret generic {{.SECRETS_NAME}} --from-env-file={{.ROOT_DIR}}/{{.SECRETS_ENV_FILE}}

  create-open-metadata-secrets:
    desc: Create the Open Metadata Kubernetes secrets
    deps:
      - gen-open-metadata-keypair
    cmds:
      - cmd: >
          kubectl create secret generic
          openmetadata-postgres-secrets
          --from-literal=openmetadata-postgres-password={{.POSTGRES_PASSWORD}}
        ignore_error: true
      - cmd: >
          kubectl create secret generic
          openmetadata-jwt-keys
          --from-file {{.ROOT_DIR}}/{{.OPEN_METADATA_PRIVKEY}}
          --from-file {{.ROOT_DIR}}/{{.OPEN_METADATA_PUBKEY}}
        ignore_error: true

  build-helm-values:
    desc: Build the Helm values file for Dagster
    env:
      ELASTIC_HOST: host.docker.internal
      ELASTIC_PORT: 9200
      POSTGRES_OPEN_METADATA_HOST: host.docker.internal
      POSTGRES_OPEN_METADATA_PORT: 5432
      POSTGRES_OPEN_METADATA_DBNAME: "{{.OPEN_METADATA_POSTGRES_DB}}"
      POSTGRES_OPEN_METADATA_USER: "{{.POSTGRES_USER}}"
      POSTGRES_OPEN_METADATA_PASSWORD: "{{.POSTGRES_PASSWORD}}"
      OPEN_METADATA_PUBKEY: "{{.OPEN_METADATA_PUBKEY}}"
      OPEN_METADATA_PRIVKEY: "{{.OPEN_METADATA_PRIVKEY}}"
    cmds:
      - envsubst < {{.ROOT_DIR}}/{{.VALUES_DAGSTER_TMPL}} > {{.ROOT_DIR}}/{{.VALUES_DAGSTER}}
      - envsubst < {{.ROOT_DIR}}/{{.VALUES_OPEN_METADATA_TMPL}} > {{.ROOT_DIR}}/{{.VALUES_OPEN_METADATA}}

  install-helm-dagster:
    desc: Install Dagster Helm chart
    deps:
      - build-helm-values
      - minikube-start
    cmds:
      - task: create-dagster-secrets
      - helm repo add dagster https://dagster-io.github.io/helm
      - >
        helm upgrade --install dagster dagster/dagster 
        --version {{.DAGSTER_CHART_VERSION}}
        -f {{.ROOT_DIR}}/{{.VALUES_DAGSTER}}

  install-helm-open-metadata:
    desc: Install Open Metadata Helm chart
    deps:
      - build-helm-values
      - minikube-start
    cmds:
      - task: create-open-metadata-secrets
      - helm repo add open-metadata https://helm.open-metadata.org/
      - >
        helm upgrade --install openmetadata open-metadata/openmetadata
        --version {{.OPEN_METADATA_CHART_VERSION}}
        -f {{.ROOT_DIR}}/{{.VALUES_OPEN_METADATA}}

  push-code-image:
    desc: Push the code image to Docker Hub
    cmds:
      - docker build -t {{.IMAGE_LOCAL_NAME}} {{.ROOT_DIR}}
      - docker tag {{.IMAGE_LOCAL_NAME}} {{.IMAGE_REMOTE_NAME}}:{{.IMAGE_REMOTE_TAG}}
      - docker push {{.IMAGE_REMOTE_NAME}}:{{.IMAGE_REMOTE_TAG}}

  start-dev-k8s:
    desc: Start the dev environment in the local Kubernetes cluster
    cmds:
      - task: push-code-image
      - task: compose-up
      - task: minikube-start
      - task: install-helm-dagster
      - task: install-helm-open-metadata

  forward-k8s-dagster-webserver:
    desc: Forward the Dagster Webserver port
    cmds:
      - >
        DAGSTER_WEBSERVER_POD_NAME=$(
        kubectl get pods --namespace default 
        -l "component=dagster-webserver" 
        -o jsonpath="{.items[0].metadata.name}"
        ) && kubectl port-forward ${DAGSTER_WEBSERVER_POD_NAME} {{.DAGSTER_WEBSERVER_PORT}}:80

  create-venv-dagster-dev:
    desc: Create the Dagster dev virtualenv
    cmds:
      - virtualenv {{.ROOT_DIR}}/{{.VENV_NAME}}
      - "{{.ROOT_DIR}}/{{.VENV_NAME}}/bin/pip install -U -e {{.ROOT_DIR}}/moderate[dev]"

  dagster-dev:
    desc: Run the Dagster dev CLI
    deps:
      - compose-up
      - create-venv-dagster-dev
    env:
      KEYCLOAK_SERVER_URL: http://localhost:8080/
      KEYCLOAK_ADMIN_USERNAME: "{{.KEYCLOAK_ADMIN}}"
      KEYCLOAK_ADMIN_PASSWORD: "{{.KEYCLOAK_ADMIN_PASSWORD}}"
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_USERNAME: "{{.POSTGRES_USER}}"
      POSTGRES_PASSWORD: "{{.POSTGRES_PASSWORD}}"
      OPEN_METADATA_HOST: localhost
      OPEN_METADATA_PORT: 8585
      # ToDo: Retrieve the token programmatically
      OPEN_METADATA_TOKEN: "{{.OPEN_METADATA_TOKEN}}"
    cmds:
      - cd {{.ROOT_DIR}}/moderate && {{.ROOT_DIR}}/{{.VENV_NAME}}/bin/dagster dev
